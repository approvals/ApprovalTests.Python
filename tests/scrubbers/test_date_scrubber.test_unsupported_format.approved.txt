Exception: No match found for 'an unsupported format'.
 Feel free to add your date at https://github.com/approvals/ApprovalTests.Python/issues/124 
 Current supported formats are: 
    Tue May 13 16:30:00 | [a-zA-Z]{3} [a-zA-Z]{3} \d{2} \d{2}:\d{2}:\d{2} 
    Wed Nov 17 22:28:33 EET 2021 | [a-zA-Z]{3} [a-zA-Z]{3} \d{2} \d{2}:\d{2}:\d{2} [a-zA-Z]{3,4} \d{4} 
    Tue May 13 2014 23:30:00.789 | [a-zA-Z]{3} [a-zA-Z]{3} \d{2} \d{4} \d{2}:\d{2}:\d{2}.\d{3} 
    Tue May 13 16:30:00 -0800 2014 | [a-zA-Z]{3} [a-zA-Z]{3} \d{2} \d{2}:\d{2}:\d{2} -\d{4} \d{4} 
    13 May 2014 23:50:49,999 | \d{2} [a-zA-Z]{3} \d{4} \d{2}:\d{2}:\d{2},\d{3} 
    May 13, 2014 11:30:00 PM PST | [a-zA-Z]{3} \d{2}, \d{4} \d{2}:\d{2}:\d{2} [a-zA-Z]{2} [a-zA-Z]{3} 
    23:30:00 | \d{2}:\d{2}:\d{2} 
    2014/05/13 16:30:59.786 | \d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}.\d{2}\d 
    2020-9-10T08:07Z | \d{4}-\d{1,2}-\d{1,2}T\d{1,2}:\d{2}Z 
    2020-09-10T08:07:89Z | \d{4}-\d{1,2}-\d{1,2}T\d{1,2}:\d{2}:\d{2}Z 
    2020-09-10T01:23:45.678Z | \d{4}-\d{1,2}-\d{1,2}T\d{1,2}:\d{2}\:\d{2}\.\d{3}Z 
    2023-07-16 17:39:03.293919 | \d{4}-\d{1,2}-\d{1,2}(?:T| )\d{1,2}:\d{2}:\d{2}\.\d{6} 
    20210505T091112Z | \d{8}T\d{6}Z 
    Tue May 13 16:30:00 2014 | (Mon|Tue|Wed|Thu|Fri|Sat|Sun)\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s([0-3]?\d)\s([0-1]\d:[0-5]\d:[0-5]\d)\s(\d{4}) 
    2021-09-10T08:07:00+03:00 | \d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\+\d{2}:\d{2} 
    20250527_125703 | [12]\d{3}[01]\d[0-3]\d_[0-2]\d[0-5]\d[0-5]\d 
    2025-07-20 | \d{4}-\d{2}-\d{2}

 This date format is not recognized: '07-20-2025'
   If you would like to use this format, please add it to the list of supported formats.
   You can do this by using:
        DateScrubber.add_scrubber("07-20-2025", "<your regex pattern>")
   for additional help, see: https://github.com/approvals/ApprovalTests.Python/blob/main/docs/how_to/add_scrubbers.md

+++++ Hey ApprovalTests, ensemble coders...   ++++++
+++++ PLEASE see below for MANY more examples of this error message. ++++++
+++++ also:  commit earlier in the day may not have included user: @digable1


TODO LIST:
Key x = done, - = started
[ - ] 1. create function : DateScrubber.add_scrubber The DateScrubber.add_scrubber function adds the regex format  
    [ x ] 1. verifies it's valid
    [ x ] 1. verifies that the example string matches the provided regex
    [ - ] 1. adds it to the list of date scrubbers
    [ x ] 1. add add_scrubbers.md to python docs
    [ - ] 1. add add_scrubbers.md to common docs
    
[ x ] 2. fix error message (7/27 message improved)
~~earlier note:(7/27 in line 23 and 25 added that the format is actually 07-20-2025 - is this wrong 
or are all of the tests in test_date_scrubber for 2025-07-20 incorrect?)~~
[ ] 3. Possible add telemetery (what is that?)
[ ] 4. possibly add emojis to the error message
[ ] 5. possible better test name. 
What does gracefully mean?
  instead of:   test_handles_invalid_regex_patterns_gracefully
  use: opt 1:   test_gives_instructions_on_how_to_add_this_regex_pattern_or_raises_exception
  or
  use: opt 2:   test_offers_to_add_this_regex_pattern_or_raises_exception
  DateScrubber.add_scrubber
    ("Date format", "regex string")  ==> output
    --------------------------------------------------
    ("2025-07-20", "[invalid-regex")  ==> Exception: Invalid regex pattern '[invalid-regex': unterminated character set at position 0 
    ("2025-07-20", "\\d{4}-\\d{2}-\\d{2}")  ==> Exception: Regex '\\d{4}-\\d{2}-\\d{2}' does not match example '2025-07-20'

opt 1: gives_instructions_on_how_to_add_this_regex_pattern_or_raises_exception
    ("07-20-2025", r"\d{2}-\d{2}-\d{4}")  ==> Compiler message:
1A: 
    We do not recognize this date format: '07-20-2025'
    To add this new format:  '07-20-2025'
    you would use the  
        DateScrubber.add_scrubber("07-20-2025", "\\d{2}-\\d{2}-\\d{4}")
1B:
    This is a valid regex pattern, and it matches the example
    To add this new date format use:  
    DateScrubber.add_scrubber("07-20-2025", "\\d{2}-\\d{2}-\\d{4}") 
1C 
    Unrecognized date format: '07-20-2025'
    To add support, use:
        DateScrubber.add_scrubber("07-20-2025", "\\d{2}-\\d{2}-\\d{4}")
1D:
    New date format detected: '07-20-2025'
    To register this format, use:
        DateScrubber.add_scrubber("07-20-2025", "\\d{2}-\\d{2}-\\d{4}")
1E:
   This date format is not recognized: '07-20-2025'
   If you would like to use this format, please add it to the list of supported formats.
   You can do this by using:
        DateScrubber.add_scrubber("07-20-2025", "<your regex pattern>")
   for additional help, see: https://github.com/approvals/ApprovalTests.Python/blob/main/docs/how_to/add_scrubbers.md
   
   NO LONGER needed in the Terminal message, because it is now in the docs :)
   you can find a list of supported formats at https://github.com/approvals/ApprovalTests.Python/blob/main/docs/DateScrubber.md
   you can create a regex for this example at https://regex101.com/
   or by opening an issue at https://github.com/approvals/ApprovalTests.Python/issues/124

opt 2: offer_to_add_this_regex_pattern
    ("07-20-2025", r"\d{2}-\d{2}-\d{4}")  ==> Compiler message:
2A:
    This is a valid regex pattern, and it matches the example
    we could add this pair for you:
    "07-20-2025"  |  "\\d{2}-\\d{2}-\\d{4}"  
    Would you like to add this regex pattern? (y/n)
2B:
    This is a valid regex pattern, and it matches the example
    we could register this format for you:
    "07-20-2025"  |  "\\d{2}-\\d{2}-\\d{4}"  
    Would you like to register this format? (y/n)
  


General Question:
Cascade sometimes used this format:
    r"\d{2}-\d{2}-\d{4}"  and other times updated the code to use this format:
    "\\d{2}-\\d{2}-\\d{4}" 
    not sure which is better.